import React, { useState, useEffect } from "react";
import { createRoot } from "react-dom/client";
import FileMakerService from "./services/fileMakerService";
import Spinner from "./components/Spinner";

/**
 * Main App component that demonstrates the spinner usage with FileMaker service
 */
function App() {
  const [loading, setLoading] = useState(true);
  const [result, setResult] = useState(null);
  const [error, setError] = useState(null);
  
  useEffect(() => {
    // Create a container for the spinner
    const spinnerContainer = document.createElement('div');
    spinnerContainer.id = 'spinner-container';
    document.getElementById('root').appendChild(spinnerContainer);
    
    // Create and show the spinner
    const spinner = new Spinner({
      size: 'medium',
      color: '#0091CE'
    });
    spinner.appendTo('#spinner-container');
    
    // Register callback function
    FileMakerService.registerCallback('handleContextResult', ({ json }) => {
      // Hide and remove spinner
      spinner.remove();
      
      // Update state with result
      setLoading(false);
      if (json && json.success) {
        setResult(json.schema);
      } else {
        setError(json?.error || 'An error occurred while fetching data');
      }
    });
    
    // Make async call to FileMaker
    FileMakerService.executeScript({
      method: 'async',
      script: 'JS * Fetch Data',
      params: {
        action: 'returnContext'
      }
    }).catch(err => {
      // Hide and remove spinner
      spinner.remove();
      
      // Update state with error
      setLoading(false);
      setError(err.message || 'An error occurred while fetching data');
    });
    
    // Cleanup function
    return () => {
      const container = document.getElementById('spinner-container');
      if (container) {
        container.remove();
      }
    };
  }, []);
  
  return (
    <div className="app-container">
      <h1>FileMaker SQL Schema</h1>
      
      {loading ? (
        <p>Loading data from FileMaker...</p>
      ) : error ? (
        <div className="error-container">
          <h2>Error</h2>
          <p>{error}</p>
        </div>
      ) : (
        <div className="result-container">
          <h2>SQL Schema</h2>
          <pre>{result}</pre>
        </div>
      )}
    </div>
  );
}

// Initialize the React app
const rootElement = document.getElementById("root");
const root = createRoot(rootElement);
root.render(<App />);

// Log version
console.log("v.1.0.0 - React Example");